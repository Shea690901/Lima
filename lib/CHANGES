Beek fixed review to ignore non-string message types and messages 

Zifnab added msg command 

Ohara replaced /log/quests and /log/QUESTS with clean files since the 
    contents of the current files bear no relationship to real files (well 
    .. at least til lestat arises ..) 

Beek added support for ({ num, arg1, arg2 }) as values in set_objects(), 
    where the additional args are passed to create(). 

Ohara upgraded scan <whee> 

Ohara finally got round to aliasing date to time .. finally Lima works 
    logically, rather than the converse (AKA "Unix Does It That Way" ) 

Ohara went and changed date.c to time.c at Deathblade's urging. Dinos who 
    prefer using date may alias it. <grin> 

Deathblade updated the I3 code to use startup-req-2. Related changes in 
    mudinfo.c and mudlist.c. 

Beek fixed 'stat here' not to print the long twice 

Beek fixed dest to handle 'the something' better 

Beek made 'L' in the newsreader not display removed posts 

Beek fixed 'look in' to print the returned message 

Beek fixed it so that it isn't possible to look into closed objects :-) 

Beek disabled colors in ls since they are ugly don't wrap right anyway 

Beek removed a number of outdated bug reports from lima.bugs 

Beek removed the title sprintf hack 

Beek cleaned up lima.ideas some 

Beek changed do_game_command() to return 1 on success, 0 on failure. It is 
    now the callers responsibility to write(nonsense()). Propagated to 
    shell obs. 

Ohara fixed that extremely obscure bug in helpsys.c, where if you removed a 
    helpfile after it was included in the mapping it would error :) 

Ohara fixed all exits = ([ ]) into set_exits( ([ ]) ) .. please use this 
    form in future, as the former may become a compat buster, 

Deathblade tweaked master.c and secure_d.c to provide a bit better 
    messaging when security violations occur. 

Deathblade changed doc_d to skip some directories. see 
    doc_d::filtered_dirs[] 

Deathblade added /domains/std/wolf.c as an example of a monster that can 
    follow you. Needs more work, though, but the basis is there. 

Beek removed the pre_exit() call, since (1) nothing in the lib uses it, (2) 
    it was one of those lame this_object()-> hooks, (3) it can be done with 
    the exit functionality 

Beek removed the post_exit() call; same reasoning. 

Beek added a "person_left" hook, which is called with the direction as an 
    argument. 

Beek moved the player message handling down to living.c, and put them in 
    /std/living/messages.c [required for living objects to be able to move] 

Beek fixed a bug in /std/modules/triggers which would barf on lines 
    consisting only of whitespace (common in room descriptions) 

Beek made a number of improvements to /domains/std/wolf.c; see news for 
    comments 

Beek added /domains/std/pet.c just for the heck of it :-) 

Beek fixed echoall and echoto 

Deathblade fixed the shutdown command (and, btw, reset the driver.log file 
    during testing :-) 

Beek disabled input_to 

Beek uploaded my improved set module from BeekMUD; see /std/modules/set.c. 
    Useful for newsreaders. 

Beek fixed the pointer for compile errors to not barf on contexts which 
    contain % 

Beek added direct_kill_liv[_with_obj]() to /std/monster 

Beek added /domains/std/troll as the example monster 

Beek : weapons can now define prevent_disarm() if they want to avoid being 
    sent flying 

Beek made some extensive changes to how messages are stored; objects now 
    have a mapping of default messages [shared, from MESSAGES_D], and a 
    mapping of added messages, and combat messages are separate as well. 
    You might want to do: @ .me->clear_messages() to get the new defaults 

Beek made a number of fixes to combat 

Beek simul'ed destruct() to always call ob->remove() except in the case of 
    destruct(this_object()) 

Beek changed it so that wizzes quit fighting and heal when they die 

Beek switched around the combat logic a bit so that the messages preceded 
    the results; hit_living() and do_damage() are void now; adjust_result() 
    is adjust_my_result(), and the target gets a chance via adjust_result() 
    and not do_damage() 

Beek made /std/weapon call set_gettable(1) 

Beek changed USE_COMBAT (which was unused) to COMBAT_STYLE, currently 
    defined to be one of (COMBAT_SIMPLE, COMBAT_TRADITIONAL, 
    COMBAT_COMPLEX) 

Beek moved the combat related source to M_DAMAGE_SOURCE, so that living 
    objects wouldn't have the 'wieldable' functionality 

Beek added /domains/std/pac_sword as an example of a sword that does 
    something non-trivial 

Beek lifted weapon handling into /std/monster/weapon, and cleaned it up a 
    lot. 

Beek got sick of config.h's size, and made config_combat.h 

Beek fixed wield OBJ to make sure you are holding it :-) 

Beek added a random target choice/same target as long as valid config 
    option 

Beek moved death functionality into /std/monster/death 

Beek added corpses, for those who want them; also 
    set_corpse_long/set_corpse_filename 

Beek massively re-modularized combat. parts are in /std/monster/base/*, 
    with different types of combat in /std/monster. Currently, only 
    /std/monster/simple exists. 

Beek added heart_beat based combat as a config option 

Beek added /std/monster/traditional, which gives a more hit-point oriented, 
    but still simple combat scheme. 

Beek started /std/race.c, and made stat-handling more efficient; still not 
    sure how best to handle effects of base bonuses to derived stats. It 
    could be done, but it's expensive. Anyway, more work later. 

Beek added a M_DAMAGE_SINK module; basically, it absorbs damage made by 
    M_DAMAGE_SOURCES ;-) used it to implement /std/armor.c, so that writing 
    a piece of armor doesn't involve hard-coding adjust_result() and 
    add_armor() 

Beek fixed a couple things with wearable; hooked it back into combat 

Beek add /domains/std/chainmail.c and /domains/std/platemail.c as examples 
    of simple/non-trivial armor, respectively 

Beek moved /obj/sword.c to /domains/std/sword.c 

Beek made all swords set their damage type to 'blade' and not the default 
    ('blow'). 

Beek abstracted 'swordness' to /std/sword; ff to suggest a better place for 
    such 'high-level' inheritables 

Beek added an example of adding to the default messages for weapons; see 
    /domains/std/sword. 

Beek made all armors and weapons id to 'armor' and 'weapon' respectively 

Beek made add_id() add to the start, not the end, so that the primary id is 
    correct in cases where ids are added by inheritance; this will change 
    the primary id to the last add_id and not the first add_id, 
    unfortunately. Probably more changes here later. 

Beek fixed wield to mark the old weapon as unwielded. 

Beek fixed it so that weapons that leave your inventory are no longer 
    marked as wielded. 

Beek finished reorganizing bodystats; the formulas are the same with the 
    exception of a few bugfixes 

Beek made combat actually depend on stats :-) 

Beek added /std/race/elf.c as a race example 

Beek made base_name() default to this_object() 

Beek fixed wield.c to call try_to_acquire() in the correct place 

Deathblade added the "comment" emote. Usenet readers may have a bit of fun 
    with it :-) 

Deathblade removed the @help privilege, replacing it with Mudlib:help. Now, 
    mudlib members should be able to write to /help. Also, I added 
    Mudlib:daemons to the Mudlib:help priv so that doc_d can write into the 
    /help dir. 

Zifnab added /std/money.c as a basic money implentation (see news for more) 

Zifnab added a basic coin object, currently it only works like this drop 
    amount type coins 

Beek fixed TARGETTING_IS_RANDOM to not affect players who specify someone 

Beek added 'kill' (no arg) which takes a swing at whoever you are attacking 

Beek made a few fixes to skill_d; fuzzy_divide() for integer division and 
    some added sanity to test_skill 

Beek added missing newlines to the autodoc output 

Beek did a complete rebuild of the autodoc stuff to fix it all 

Beek fixed 'kill me' to do something a bit more sensible 

Zifnab added a bird's eye view of verbs to /help today, more examples will 
    be included at a later date 

Rust removed all the notify_fail calls from commands 

Rust added a #define: MAX_NUMBER_OF_ALIASES for those people who want to 
    limit how many aliases a person can have 

