Beek added an autodoc help file, so people can't complain they don't 
    understand the format 

Beek changed /std/modules/complete not to use regexp (intermud tell doesn't 
    bug on regexp special chars now) 

Beek added a few //:FUNCTION lines to various objects 

Beek added EVERYTHING_SAVES to config.h; if it's on M_SAVE comes in at 
    OBJECT. The lib would still need to be changed to call add_saved() in 
    the right places, though 

Beek removed the old autoload code; anything you have in your inventory 
    that inherits M_SAVE should save and restore with you now. 

Beek changed the virtual lookup to take the last cfile whose name 
    corresponds to a directory, whether that directory exists or not. 

Beek added /domains/std/rooms/labyrinth as an example of a nontrivial 
    virtual room use (AKA "Yes, you can do things other than parametrized 
    grid" ) 

Beek :note: The labyrinth is still a bit buggy. 

Rust made M_SAVE::save_to_string take recursion as an argument, cause 
    people are forgetting to call set_save_recurse on their own... 

Rust maded saved_items non-static, since their whole point is to be 
    persistant ;-) I also made save_recurse static. 

Rust made a fix to /std/save::load_from_string that prevented recursive 
    restores from working... 

Rust fixed a bug in M_SAVE: If recursion was on, it always moved the object 
    into the previous object. Which moved the body object into the user 
    object. And the user object wouldn't let go.... N 

Rust made it so that if you have EVERYTHING_SAVES on, all your objects are 
    there when you quit and come back. 

Rust made M_SAVE ignore missing objects. So if an object got moved, or 
    removed, you don't get it back when you restore. 

Ohara fixed stairs to have no plurular, so frotz should work on them. 
    Hopefully. 

Ohara changed home to tell you that you're going home .. I'm not certain 
    whether I should have changed from a tell_room to an other_action tho. 

Deathblade updated the I3 daemon with the ucache and most of the auth 
    services. Added empty response for oob-req. Added response for 
    chan-use-req and channel-t (latter is stubbed). 

Beek fixed a bug in /std/object/names.c which caused the primary_id to get 
    set to 'nondescript thing' too early, causing objects which never call 
    set_id, but do call add_id (e.g. the stairs) to be nondescript 

Beek changed the shell to only interpret commands as paths if they include 
    at least one '/'. This means that CWD isn't searched; if you want to 
    execute something in your CWD use ./cmd 

Beek fixed a few spots that didn't realize find_cmd() could return 
    non-zero, non-object/string results in the case of broken commands 

Beek made find_cmd() call find_cmd_in_path() at the end; the code was 
    duplicated, with the exception of a bug that was only fixed in one of 
    the two ... 

Beek changed the wiz shell to only do globbing on cmds with /'s in them ... 

Beek added some path handling logic, to avoid calling evaluate_path() on 
    every element of the path for every coomand 

Beek ripped /std/body/path.c; suprisingly, it was COMPLETELY unused. 

Beek :note: use ->query_shell_ob()->query_path() now; it's automagically 
    updated from the "path" var, and is guaranteed to contain absolute 
    paths 

Beek finally removed the map(... (: evaluate_path :) ) from find_cmd(), 
    which was what started this entire thing :-) 

Beek fixed update -z to not bail if you remove a file that an object 
    inherits 

Beek fixed /std/water_room.c (room::create) 

Beek fixed showpath to not end in a comma 

Beek fixed glob'ed and explicit path commands to work with Cmd_rules; the 
    'name' was causing it to miss 

Beek fearlessly wandered into shell expansion, slew the hideous print ` "" 
    ` -> print `code` bug, and returned alive. 

Beek cleaned up lima.bugs again (87 of 1193 remain :-) ) 

Beek removed can_ functions from a ton of verbs 

Ohara notes that the codeboys are slaves to noone but himself. People 
    ordering them to "just fix it" are liable to unpleasantness unless 
    their name happens to be five letters long, begin with "Oh" , and end 
    in "ara" , in which case it better damn well be done ;) 

Deathblade fixed the bug where mail didn't receive the proper time on it 

Deathblade fixed the login code to contain its own regexp for names rather 
    than relying on the totally non-obvious usage of the banish code to 
    enforce names. Not to mention that a banish.o is NOT shipped with the 
    lib (who knew we had to ship one? :-). 

Deathblade began some OOB work; fleshed out the auth service a bit more. 

Beek noted that regexp(str, re) is the same as sizeof(regexp( ({ str }), 
    re)), and fixed DB's code :-) 

Beek fixed a small type error in actions.c 

Beek made some changes to inv_list(); it takes an array of objects now, and 
    depth counting starts at zero again, so the extra 0, 1 isn't needed 

Beek fixed inventory_header() to be right for objects that have called 
    set_preposition() 

Beek cleaned up some inventory handling a bit more; mostly foreach()ing 
    things, etc 

Beek added COMPLEX_CONTAINER 

Beek made a number of changes to verbs: 'take' is now a synonym for certain 
    rules of 'get' (but not others; take off != get off); 'carry' is only a 
    synonym for ones that make sense. Also added a small take verb to 
    handle 'take off OBJ' 

Beek made 'put down' a synonym for 'drop' and 'put on' an synonym for 
    'wear' 

Beek torched the take verb, and did it as a synonym 

Beek changed query_verb_info() syntax slightly [compat tho]; it's now ({ 
    array of rules, syns for those rules, more rules, more syns, etc ... }) 

Beek added a simple 'ring' verb 

Beek fixed the labyrinth to not accept illegal path names 

Beek added add_hidden_exit(exit [,exit...]) and remove_hidden_exit() 

Ohara added a 'question' command ala bug/idea/typo/todo 

Beek fixed a typo that caused combat to error 

Beek fixed body::die() to actually make the player a ghost 

Beek removed the link switch to ghost body 

Beek fixed heal_us() to not allow ressurection 

Beek added a reincarnate() function 

Beek made the 'go' and 'look' verbs usable by ghosts 

Beek made /std/verb_ob's default_checks() use the functions need_to_see(), 
    need_to_be_alive(), and need_to_think() so these can be overloaded 
    separately 

Rust made it so that outgoing sockets can only be made by priv 1 objects. 

Rust moved the imud_d to /trans 

Rust fixed the listing f souls from the player menu 

Rust made it so you can change your www home page from the player menu 

Rust added the option to test a soul to the player menu. 

Rust added an ob_state override to /std/body, which fixes the bug of seeing 
    2 of yourself on furniture, hopefully. 

Rust fixed complex_container to have a different maximum capacity / 
    capacity for each relationship. You now need to call 
    set_max_capacity(value,relation) for each relation. 

Rust changed the non-room class (inherited by furniture and vehicles) to 
    inherit complex_container instead of container. 

Rust fixed a bunch of bugs. The only important change to take note of is 
    that you can't mail admin, you now have to mail (admin) 

Deathblade ifdef'd socket's requirement for privs. IMUD_D creates sockets 
    in call_outs() where the base priv on the call stack is 0. And I'm not 
    about to add some damn unguarded() calls into IMUD_D just to create the 
    socket. 

Deathblade pulled the shell handling out of the body in preparation for the 
    body to become low priv (yet the shell needs to remain high priv). The 
    user ob now handles the shell ob. 

Deathblade created /data/shells and secured it. /obj/pshell had to move 
    (for now) to /trans/obj/pshell to deal with that security. SHELL now 
    saves into that area (altho the shell's save code is nasty). 

Deathblade used a little sed script to copy people's shell data into the 
    new area. 

Deathblade cleaned up a bit of the creation/removal/start/stop of the 
    shell. 

Deathblade changed /data/shells to /data/wshells. Added /data/pshells. The 
    wizard/player shell data saves in the appropriate dir now. Correct 
    privs are assigned and pshell was moved back to /obj. 

Deathblade added a config option: HANDLE_MANY_WIZARDS. If this is set, then 
    /data/wshells should have a to z subdirs (like Lima Bean). In the 
    distribution, this will not be set and all wizard shell data will 
    simply be saved in /data/wshells. 

Beek made ghosts show up as "The ghost of ..." in rooms 

Zifnab added an example of a simple book in /domains/std 

Zifnab added an example of functions in exits (couldnt find one in 
    /domains/std) it is a car wash for DB's camaro :) 

Robocoder optimized a teeny weeny 'lil bit o' code in /WWW/cgi/autodoc.c to 
    create the 'upper' string faster 

Rust added /domains/std/portal, which is a simple one way portal 

Ohara fixed that typo in admtool. Woo Woo :) 

Deathblade added auto- "alias" for channels to the wiz and player shells. 
    If the command matches a channel's "public" name (not the internal 
    name), then the rest of the line is used as a channel command. 

Deathblade removed the plyr_ prefix from news, newbie, gossip. Auto-rename 
    is done for people at body restore type. Modified NEWS_D to post to 
    "news" . 

Deathblade fixed a small typo in the 'listeners' command: admin channels 
    were listed as wiz 

Deathblade added all permanent channels to the list that are recognized for 
    auto-aliasing. They will be recognized whether you are listening or 
    not. This allows you to do: newbie /on 

Deathblade removed the following channel aliases: wiz, announce, newbie, 
    gossip. They are no longer needed. Until some more work is done on the 
    I3 channels, the aliases will be handy and will remain. 

Deathblade updated "help channels" to remove the paragraph talking about 
    aliasing the channel stuff. 

Deathblade updated related channel help with the new commands and info on 
    auto-aliasing. 

Deathblade renamed wiz_wiz, wiz_announce, and wiz_errors to drop the wiz_ 
    prefix. Auto-renaming installed in the body at restore time. Fixed all 
    lib uses of the channels (body, master, imud_d). adm_admin also 
    happened to be renamed, but the lib doesn't refer to it (except for it 
    being a permanent channel distributed with the lib) 

Deathblade fixed a bug in FINGER_D where it assumed wiz_position always 
    exists 

Deathblade created Mudlib:socket, make socket.c check for it, and added 
    Mudlib:daemons and Mudlib:objects to the privilege so that daemons and 
    objects can open sockets. 

Deathblade updated IMUD_D to use unguarded() when creating its socket :-). 
    I did not update /obj/nntp.c or /trans/obj/telnet_ob.c 

Deathblade folded in Harmless's updates to /obj/nntp.c (finally got around 
    to it!) 

Ohara updated mail help 

Ohara bugfixed scan 

Ohara updated the help on force a little :) 

Deathblade forgot to mention: rmemote is only available to wizzes with 
    directories 

Deathblade just removed /trans/daemons. 

Rust added /domains/std/lava_room as an example for someone who was trying 
    to do essentially the same thing 

Rust made it so that game objects get setup() called in them when they're 
    cloned. This is a better(tm) place to do the stuff that you normally do 
    in create(). The examples and some of the mudlib will need to be 
    changed accordingly... 

Rust wanted to let you know, setup() isn't a compat buster, create() will 
    still work, it just might have extra side effects (like call_outs you 
    didn't expect in monsters, etc... stuff that has always happened...) 

Rust added an internal_setup(). Mudlib files which need to initialize data 
    that really shouldn't be in the blueprint object should override it. 

Deathblade fixed a small problem in socket.c to clear the fdOwned in the 
    close_callack so it doesn't try to get closed again. 

Deathblade worked more on OOB. Framework is getting there. File and mail 
    services still need a bunch of work 

Yaynu think a intresting and easy to use monster system on LIMA would be 
    one of the 

Deathblade worked with Hanzou@FotD to debug the OOB framework and one of 
    the handlers for the remote directory listing. We now support sending 
    file-list-req and receiving file-list-reply. Awfully limited, but a 
    start. The framework appears to work correctly now. 

Zifnab fixed a bug in /std/monster/base/target.c it wasnt loading. just 
    atypo mis placed ; 

Beek fixed complex container to use simple_long() instead of ::long() in 
    long(), so the inventory list isn't duplicated 

Deathblade updated all the objects in /domains/std to NOT call ::create(). 
    BAD BAD BAD. Whoever updated all the objects to use setup() should have 
    removed those. They cause infinite recursions. 7 meg log files are bad 
    :-). 

Deathblade changed the guild masters to override create() rather than 
    setup(). They need to inherit create() with an extra param. No can do 
    when overriding setup(). 

Deathblade shifted the calling of setup() from create() to do_setup(); 
    create() normally calls it. I added a flag create() to object.c and 
    container.c to skip that call if needed. corpse.c sets the flag so that 
    it can complete its initialization before setup() is called. It then 
    manually calls do_setup() 

Deathblade add the skip_setup flag to /std/weapon and call it from 
    /std/sword so that the sword can fully initialize before calling 
    setup(). (sigh) 

Zifnab added additional functionality to /std/modules/vendor.c to allow the 
    vendor/shopkeeper to store items away 

Deathblade changed container::make_objects_if_needed to work off of file 
    name rather than id since the master ob doesn't have an id as it 
    expects (the master's setup() is never called meaning add_id() is not). 
    Correct way to do this? dunno, but it should prevent endless cloning 

Deathblade meant blueprint, not master :-) 

Zifnab added examine as a synonym for look 

Zifnab added set_relations( "on" ) to /domains/std/horse.c so it would 
    clone, not sure if thats the right fix for it or not 

Zifnab fixed /std/monster/simple.c which wouldnt update before 

Deathblade fixed news so that you can add/remote groups now. check for 
    ADMTOOL, not CMD_OB_ADMTOOL 

Rust re-added a shout override. Why was the old one removed?? 

Zifnab added a module for wandering monsters /std/modules/wander.c Inherit 
    M_WANDER 

Ohara added /history as a synonym for /last to channels. 

Deathblade removed the create() override in /std/book.c; no longer needed. 
    Removed the extraneous M_OPENABLE from /domains/std/lima_guide.c; 
    already present in BOOK. 

Deathblade fixed /domains/std/picture. On inventory restore, its use of 
    this_body() would bug. 

Deathblade got more of the OOB file stuff to work. Outgoing file commands 
    work; incoming connections do not. 

Ohara fixed 'get me' 

Deathblade said 'eat me' 

Deathblade whacked on the I3 finger reply. It deals with the login/out and 
    idle time better now. It still needs some formatting to make it similar 
    to local fingers, though. (combine some code?) 

Deathblade changed 'vowels' in /std/modules/messages.c to static so it 
    wouldn't get saved in most obs 

Deathblade changed /std/torch to do a set_id( "torch" ) rather than 
    add_id(). torches were coming out as weapons. 

Deathblade added mudlib_setup() to the initialization sequence and 
    converted many OBJ subclasses in /std to use it appropriately. There 
    are still some that override create() because they have parameters 
    (which apparently crash the current driver if you try to pass them from 
    create() to setup(), so that isn't done right now). 

Deathblade modified /data/players to be Mudlib:std for read/write and /std 
    to be Mudlib:std. 

Deathblade completed I3 file transfer. "iftp mudname" is the command to use 
    it. Not very friendly at this point, particularly in error 
    reporting/status, but it works. 

Deathblade fixed a small bug in monster.c that was whacking combat. There 
    is still a bug with corpses/going-up-in-smoke; otherwise, monsters 
    stick around and are thought to be ghosts, so combat is ineffective 
    with them. 

Zifnab the wolf now follows players again, 2 fixes to it, 1) inherit 
    M_SMARTMOVE 2) the wolf had no light i.e. if i left the room it couldnt 
    see. i did set_light(500), in the wolf and that took care of that 

Zifnab removed the set_light() form the wolf, at rassilon's prodding, the 
    wolf no longer follows anything unless hes in a lit room :) 

Deathblade renamed the daemons back to xxx_d and followed up with modules 
    becoming m_xxx. 

Deathblade modifed IMUD_D to properly handle the I3 router telling it to 
    switch to a new router. Tested against sample redirector "router" 

Beek fixed 'go' to not require you to be able to see 

