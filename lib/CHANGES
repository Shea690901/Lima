Beek added a dirs.h file, and put DIR_RACES in it. 

Beek fixed some nasty bugs in su; basically: sw_user() -> sw_body() -> 
    body::quit() -> body::remove() -> link::remove() -> destruct link, 
    causing the rest of sw_body to fail [in the case where you were using 
    args with su] 

Beek added su (race), which switches you to a body of the given race. E.g: 
    su (troll), su (coder), su (/wiz/beek/foo.c) <- note .c 

Beek renamed the 'light' command to the 'lightme' command, as 'light' is 
    now a verb. 

Beek added light and extinguish verbs, /domains/std/magic_torch, 
    /domains/std/magic_flame, /std/torch.c 

Beek fixed gettable objects to be droppable by default (the old behavior) 

Rust added an s flag to mudlist, which is a search flag... Try: mudlist -as 
    Lima 

Rust made it so you can do a who or type "^D" before you enter your name in 
    the login sequence. 

Rust added a new interface function to mudlist.c query_up_muds() 

Rust updated finger to ignore down muds 

Rust fixed tell in the same way. 

Rust added simple file locking to ed to prevent 2 people from using ed on 
    the same file at once 

Rust added a define to room.c I don't want wizards seeing hidden exits, 
    since they can see them via the exits command... 

Rust changed set_hidden_exits to be varargs, not to take an array. *COMPAT 
    BUSTER for some muds* 

Rust added a hack to look.c so that if you've got an item named water, and 
    you try: look at the water, look doesn't choke on the article. 

Rust added support for silently failing a move, so I can switch objects 
    behind someone's back when they get something (a rock from a pile of 
    rocks) 

Rust made it so that if you make an in_room_desc "" , the room doesn't add 
    a newline to the description. 

Rust added a throw verb 

Rust added a throwable inheritable 

Rust added a wade verb 

Rust added a swim verb 

Deathblade fixed a typo in the default "leave" message 

Deathblade moved the group of functions that did "move player" into the 
    player from the (bog) room. 

Deathblade changed room::long from private to nomask. it was impossible to 
    get a room's long :-( 

Deathblade added M_SMARTMOVE for (high-level) movement between rooms 

Deathblade added: enter and drive verbs, M_OUTSIDE, INSIDE, VEHICLE. Added 
    /domains/std/camaro. See news post for more info. 

Deathblade wanted to note: the movement functions now reside in 
    M_SMARTMOVE, not the player (yah.. I moved them twice :-) 

Rust fixed zif's vendor bug. 

Rust added a size system, which replaces mass/bulk/weight/whatever. Use 
    set_size(x) where x is: "very small" (piece of paper) "small" (an 
    apple) "medium" (a laptop) "large" (a TV) "very large" (a person) 

Rust added a "too large" size. Default size is "medium" 

Ohara fixed dest somewhat, to ensure that when you dest your environment, 
    you don't end up without an environment .. will upgrade as soon as i 
    figure out foreach and users so that users in a dested room get saved 
    too. 

Rust fixed a few bugs in smartmove.c. 1) check for a / at the start of the 
    pathname before you prepend the base dir. 2) print appropriate messages 
    when you can't move someplace. 

Rust made it so when you try to enter a room that doesn't exist or doesn't 
    load, but has a string exit defined, you get: "Construction blocks your 
    path." 

Rust merged in some changes to login.c from Satan: quit, exit, leave as 
    well as ^D. LOGIN_PROMPT define from config.h instead of a hardcoded 
    string. 

Deathblade just turned more() and more_file() into simuls. updated the 
    mudlib and whacked the "more" stuff out of the user and body objects. 

Deathblade fixed the privs of more_ob to allow moreing in read-protected 
    dirs 

Deathblade added continuation functions to 
    more()/more_file()/MORE_OB/did_d. Cleaned up /secure/user/userinfo to 
    use them. Moved didlog reporting to _before_ entering the mud (you're 
    welcome, Beek :-). 

Rust added a temporary push.c since syns are broken 

Rust added a DIGGER module for objects like shovels that are meant for 
    digging. It's interesting in the fact that it will try to complete your 
    request if you just try to dig w/ the item. If not, it prompts you, and 
    you can answer the question and it's good 

Rust added M_DIGGABLE for objects like sand you can dig in 

Rust wrote the dig verb. It handles lots of rules, and completes if you 
    have a single object missing. 

Deathblade fixed a bug in reset() that wouldn't print the clone error to 
    say why the clone failed 

Rust changed the size system to use defined ints instead of strings 

Rust tweaked the QUEST_D some, since it hadn't been touched in a long time. 

Rust hooked quest administration up to the admtool. 

Rust hooked up 40 sample points in the pirate quest. 

Rust added a quests command to show players what quests are available. 

Rust added a wizard help on quests 

Rust fixed the super fucking obnoxious history bug where you could only do: 
    %% once 

Rust added a WIZARD_START variable. START is now just where players start 

Rust wrote a big bad sample area, BTW. 

Rust added a banish menu to admtool. 

Deathblade fixed the query_roll_mods() in human.c. the adjustments did not 
    total 0 (they must for balance) 

Deathblade removed the table from room2. A similar table is now located in 
    the TI area. 

Rust wrote a first draft of a hint command. 

Deathblade made "guest" obey the site banishment so that banishes sites 
    cannot enter the mud as guest. 

Deathblade worked around a potential MudOS bug(?) where it wouldn't flush 
    the user's socket before closing; sometimes they wouldn't receive all 
    the messages written to them. Added get_lost() into login.c to boot the 
    user appropriately and then used it everywhere necessary. 

Deathblade added the "semote" player command (needs new name). It will show 
    you an emote in a nice, player-friendly way. 

Rust added a kludge to appease some pushy people. If your verb isn't 
    recognized, the game says so, instead of giving you a nonsense() 
    message, which is now just for bad syntax w/ a known verb (like on 
    zork). See bug report. 

Beek fixed the infamous 'backpack' error message, and made look <relation> 
    <object> get handled correctly if object is not a container. 

Yaynu added a command for cpu usage, cpu.c 

Rust modified the enter verb to pass the string naming the object to the 
    object. 

Beek moved quit_if_cr() to MENUS to reduce code duplication 

Beek added a 'dataedit' command, which allows variables in .o files to be 
    added, deleted, or modified easily. 

Beek added help for the dataedit command 

Beek added set_preposition( "on" ) to corpse.c 

Beek made a bunch of changes to id handling; see news for info 

Rust installed Onyx @ Red Dragon's Room Maker with one or two small 
    modifications. 

Rust installed the room maker command as: buildroom. A small help file is 
    needed for room maker I think... 

Rust went, "D'oh! Did I say buildroom?  I meant makeroom" 

Rust added a set_attached() and get_attached() to non_object 

Rust rewrote "fake items" . *BIG COMPAT BUSTER* All your set_items() calls 
    are going to break. In fact, the whole of /domains/std needs to be 
    updated 

Rust updated the sample area to use the new items interface 

Rust removed the fake-objects stuff from scan. 

Rust also changed items so that the \n at the end of the desc is not 
    necessary 

Rust added enter/exit messages. See /domains/std/rooms/caves/small_doc.c 
    for an example. (look for set_exit_msg...) 

Rust updated the pirate sample area to use the new add_item() interface, 
    which has simple hooks for verbs 

Rust added functionality to add_item() so that you can add an adjs field to 
    define adjectives for simple items 

Rust fixed invisibility. 

Rust made it so the shutdown command saves players before it calls shutdown 

Rust made it so new users get prompted for a URL 

