Rust installed Yaynu's fix for his simple_level 

Rust added an exits command for players. 

Rust fixed a bug causing put not to load 

Rust fixed a bug in calling more from admtool's newsgroup menu 

Rust redid the wade support on the beaches in the sample area because it 
    wasn't updated due to the new add_item() interface 

Rust added an object annotation system. You can annotate or view the 
    annotations for an object by the command: discuss obj. Try: discuss 
    torch. 

Beek fixed a typo in M_OPENABLE; remove_id -> remove_adj 

Beek added parse_refresh() to resync() in /std/object/names; should solve 
    the get problem. 

Beek doc'd overrides.c 

Beek made some changes to destruct(); destruct(this_object()) DOES call 
    remove now, to prevent consistency problems when mudlib objects dest 
    themselves. To avoid infinite loops, destruct( /* NO ARGS */ ) dests 
    this_object() without calling remove(), and is the correct way to 
    remove yourself from a remove() routine. Changes propagated through the 
    lib. 

Beek fixed M_OPENABLE to call set_closed(0) before trying to print the 
    contents, since the object isn't transparent until it is open 

Beek moved all handling of exits, and expansion of pathnames, to 
    /std/room/exits, from the zillion places it was across the mudlib 

Beek removed all 'hacks' which accessed the internal representation of 
    exits, and made a consistent interface instead 

Beek removed the old array style exits; ({ fail(...) }) is now done by 
    starting the string with a #, e.g. "north" : "#Only idiots want to go 
    north." 

Beek added M_BLOCKEXITS, which gives objects/monsters the ability to 
    prevent movement in certain directions with simple syntax: add_block( 
    "west" , "east 

Beek woops ... set_block_action( "$N $vwon't let $t go $o." ); 
    set_block_action( "#You don't think you can slip past the troll." ); 
    set_block_action( "#The huge boulder is in the way." ) etc 

Beek added the block_dir and block_all hooks, which the above is based on 

Beek made a new door inheritable, built on CLOSABLE, LOCKABLE, and 
    BLOCKEXITS; should be more robust than previous attempts 

Beek removed the 'num' arg from the array in set_objects() values; you 
    probably don't want more than 1 if you're passing args to create, and 
    it makes the arrays more readable 

Rust added a knock verb and a knockable inheritable. Door.c does an 
    override to handle the knock getting echoed in the remote room 

Rust added a system for handling room state, and redid room description 
    stuff 

Rust changed room longs so that you don't use \n's any more. 

Rust added a brief command 

Rust added a verbose command 

Rust wanted to clarify... room longs don't have a \n at the end, neither do 
    itemin room descriptions 

Beek made set_open_desc() set_closed_desc() take effect immediately 

Azy made a rare appearence. 

Ohara would suggest that her appearence was closer to overcooked <flees>. 

Deathblade patched modal_pop() to deal with an array bug on Alphas 

Zakk fixed /std/modules/messages.c to handle ({}) better for set_msgs(). 
    Now it wont bug out if you go and clear a message class. 

Fathom did nothing at all. Hope you don't mind. 

Deathblade removed /domains/std/objects/ocean's recursive use of an ocean 
    object. Not sure that this was "right" but the object loads now! 

Deathblade installed Zifnab's VALID_MONEY as /daemons/money_d.c. It keeps 
    track of the valid currencies and their exchange rates. Will eventually 
    need an admtool interface 

Deathblade installed Zifnab's mods to M_VENDOR to work with currency types. 
    Minor cleanups; fixed bug in sell where exchange rate wasn't being 
    used. Following Zifnab's lead: updated /domains/std/shopkeeper.c to 
    buy/sell using gold. 

Deathblade renamed Zifnab's module from valueable (sic) to valuable. Add 
    M_VALUABLE to mudlib.h 

Deathblade added a set_value(1000) to /domains/std/objects/sword.c (again 
    following Zif's lead :-) 

Deathblade installed Zifnab's money command into /cmds/player 

Deathblade updated EDIT_OB to use continuations like MORE_OB. All uses (but 
    those in wiz dirs) changed. /include/edit.h is needed now. Example 
    usage in comments of /trans/obj/edit_ob.c 

Deathblade added USE_WIZ_POSITION and /std/player/wiz_position. No admtool 
    support yet (it would go into the "user" menu) 

Beek added a feature to make Rust/Ohara's lives easier: If you want to make 
    an exit that doesn't behave like a normal one (e.g. one that does more 
    than have a destination which may/may not be blocked) see news. 

Rust commented out the vsupport inherit in less_sparse_obj. This should fix 
    not being able to do a get in an add_item 

Deathblade fixed the snoop logging so it actually worked; fleshed it out to 
    always log; also added history snoop logging. new define SNOOP_LOG, 
    located in /data/secure (it should probably be in a read-protected area 
    tho') 

Deathblade brought over old Quendor mail, so you may have some whacky mail. 
    I shut it down for good, too :-( 

Deathblade move the inherit of /std/object/light (from move) so people can 
    actually find it :-) 

Rust moved /cmds/wiz/move.c to Move.c because move conflicts w/ a game 
    verb, and in our infinite wisdom, we made system commands mask game 
    commands 

Rust changed soul_d so it doesn't test for same environment, it tests to 
    see if your target is immediatly_accessible(). So if your target is on 
    furniture.... 

Rust removed the inactive command, it didn't work anyway 

Rust reconsidered and put it back 

Rust added sit and stand verbs, /std/non-room, and /std/furniture. They're 
    going to act a bit funny until we simul_efun the messaging efuns, which 
    should happen very soon. 

Rust added simul_efuns for tell_room, tell_object and say, and added 
    support in /std/object, /std/container and /std/player 

Rust added /domains/std/bed.c as an example piece of furniture 

Yaynu ~yaynu/madiall.c command will convert all rooms in a DIR using 
    'exits' to 'set_exits' .. feel free to add to r8 

Rust commented out the door from the object list in the grand hall, because 
    somehow it's causing too deep recursion the first time you try to load 
    it, which happens to be the first time someone tries to log on 

Rust fixed zifnab's long bug... 

Deathblade added receive_xxx_msg() to /secure/user/messages.c so that the 
    user object would continue to work with tell_object() 

Rust fixed someone's undocumented changes that kept people from loggin in 

Winddle fixed NCHANNEL_D so that chan-who-req works 

Winddle added emoteto support to IMUD_D 

Deathblade wanted to point out the Rust was referring to some mods in 
    player.c for the messages that apparently got a bit tweaked, and he 
    fixed them. Gamedriver intones, "Changes are now [fully documented]." 

Deathblade removed the use of say() from the 'home' and 'inactive' 
    commands. Wiz dirs are unaffected. The say() efun has been overridden 
    to generate an error() now. 

Deathblade removed the tell() lfun from user.c and player.c 

Rust made it so that object's long()s will wrap. 

Rust made a hack so that if you have state descriptions for a room, they 
    don't get a newline before them. 

Rust added a module for drawing boxes around text. It's in 
    /std/modules/contrib/box.c 

Rust fixed a bug in immediately_accessible 

Deathblade added DEFAULT_LIGHT_LEVEL to config.h and removed all 
    set_light(1) uses from the /domains/std demo rooms 

Deathblade fixed the light system. Light now propagates from an object up 
    to the room. Movement properly adjusts all light. In short, you can 
    carry a torch around now and it will light the room. NOTE: the light 
    system does not yet watch for visiblity _changes_ (e.g. opening a box 
    that has a torch); the light will propogate correctly at first, but 
    you'll probably muss things bad if you open/close something afterwards. 
    To be fixed soon. 

Rust fixed the newsreader so that if you have no groups, news won't start 
    up. 

Rust removed INSIDE and OUTSIDE, they'll be redone differently for a9 with 
    our new spiffyness 

Deathblade fixed open/close changes to deal correctly with light. vis/invis 
    changes will still break it, but that will be a bit more involved. an 
    objects light level is also set to 0 at remove() time to properly clean 
    up light values. 

